#!/bin/bash
#
# Sanction - A quick and effective method to block entire ip blocks belonging 
# to a specific country. You can block a specific port or ban the IPs outright.
#
# Version: 0.9.2
#
# Written by Alex Darke (adarke@gmail.com) 5/10/2015
#
# Thanks to IPDeny.com for providing the publicly available IP blocks. www.ipdeny.com

countryList="inc/countryList"


if [ "$EUID" -ne 0 ]
  then echo "Because this script generates and applies IPtables/IPset rules, root level access is required."
  exit
fi

#check if ipset is installed
# install it if not


echo
echo -n "Enter the name of the country to block : "
read Country
echo -n "Enter the specific port number to block or ALL to block all access: "
read Port

Port=$(echo $Port | tr [a-z] [A-Z]);
echo
echo "Country = $Country";
echo "Port = $Port";
echo


while true
	do
		echo -n "Please confirm (y or n) : "
		read CONFIRM
		case $CONFIRM in
			y|Y|YES|yes|Yes) break ;;
			n|N|no|NO|No)
		echo Aborting 
		echo
		exit
		;;
		*) echo Please enter only y or n
	esac
	done
echo
echo

grep -i $Country $countryList >/dev/null 2>/dev/null;
if [ $? -ne 0 ] ; then echo "Unable to find the country you specified ($Country). Please check the spelling and try again."; echo; exit 1; fi

#Check to ensure there's only one match:
matchCount=$(grep -i $Country $countryList | awk '{print $1}' | wc -l);


if [ $matchCount -eq 1 ] ; then

	countryCode=$(grep -i $Country $countryList | awk '{print $1}' | tr "[:upper:]" "[:lower:]")
	countryName=$(grep -i $Country $countryList | awk '{print $2}')

	echo "$countryName is the 2 letter abbreviation: $countryCode";
	echo "Obtaining IP blocks now..."
	wget -P /tmp http://www.ipdeny.com/ipblocks/data/countries/$countryCode.zone >/dev/null 2>/dev/null;

        if [ $? -ne 0 ] ; then echo "Unable to find IP blocks for $countryCode / $countryName. Aborting."; exit 1; fi

	echo "Formulating IPTables rules..."
	
	echo "#!/bin/bash" > /tmp/sanction.$countryCode.rules;
	echo "#!/bin/bash" > /tmp/sanction.remove.$countryCode.rules;

	if [ $Port = "ALL" ] ; then
	
		for i in $(cat /tmp/$countryCode.zone) ; 
			do echo "iptables -A INPUT -s $i -j DROP" >> /tmp/sanction.$countryCode.rules; 
		done
                for i in $(cat /tmp/$countryCode.zone) ;
                        do echo "iptables -D INPUT -s $i -j DROP" >> /tmp/sanction.remove.$countryCode.rules;
                done

	else
		for i in $(cat /tmp/$countryCode.zone) ;
			do echo "iptables -A INPUT -s $i -p tcp --dport $Port -j DROP" >> /tmp/sanction.$countryCode.rules;
		done
		for i in $(cat /tmp/$countryCode.zone) ;
                        do echo "iptables -D INPUT -s $i -p tcp --dport $Port -j DROP" >> /tmp/sanction.remove.$countryCode.rules;
                done
	fi

        echo "rm /tmp/sanction.remove.$countryCode.rules;" >> /tmp/sanction.remove.$countryCode.rules;

	echo "Applying IPtables rules..."
	chmod +x /tmp/sanction.$countryCode.rules;
	chmod +x /tmp/sanction.remove.$countryCode.rules;
	/tmp/sanction.$countryCode.rules;

	echo 
	echo "Success! The requested rules have been applied."
	echo "To remove them, run the command (as root):"
	echo
	echo "/tmp/sanction.remove.$countryCode.rules"
	echo
	echo "or just restart iptables."
	

else 

	echo "Warning! There were multiple matches for the country you asked for."
	echo

        OLDIFS=$IFS
        IFS=$'\n'

        lines=($(grep -i $Country $countryList))

	createmenu () {
	PS3="Select which Country to use: "
  	select option; do 
    		if [ "$REPLY" -gt "$#" ]; then
      			echo "This shouldn't happen OMG"
      		break;
    		elif [ 1 -le "$REPLY" ] || [ "$REPLY" -le $(($#-1)) ]; then
			chosen=$option;
      		break;
    		else
      		echo "Incorrect Input: Select a number 1-$#"
    		fi
  	done
	}

	createmenu "${lines[@]}"

	IFS=$OLDIFS
	echo
	echo "You picked:  $chosen";

#second pass for select menu option
	
	countryCode=$(echo $chosen| awk '{print $1}' | tr "[:upper:]" "[:lower:]")
	countryName=$(echo $chosen| awk '{print $2}')


        echo "Obtaining IP blocks now..."
        wget -P /tmp http://www.ipdeny.com/ipblocks/data/countries/$countryCode.zone >/dev/null 2>/dev/null;
	
	if [ $? -ne 0 ] ; then echo "Unable to find IP blocks for $countryCode / $countryName. Aborting."; exit 1; fi

        echo "Formulating IPTables rules..."
        echo

        echo "#!/bin/bash" > /tmp/sanction.$countryCode.rules;
        echo "#!/bin/bash" > /tmp/sanction.remove.$countryCode.rules;

        if [ $Port = "ALL" ] ; then

                for i in $(cat /tmp/$countryCode.zone) ;
                        do echo "iptables -A INPUT -s $i -j DROP" >> /tmp/sanction.$countryCode.rules;
                done
                for i in $(cat /tmp/$countryCode.zone) ;
                        do echo "iptables -D INPUT -s $i -j DROP" >> /tmp/sanction.remove.$countryCode.rules;
                done

        else
                for i in $(cat /tmp/$countryCode.zone) ;
                        do echo "iptables -A INPUT -s $i -p tcp --dport $Port -j DROP" >> /tmp/sanction.$countryCode.rules;
                done
                for i in $(cat /tmp/$countryCode.zone) ;
                        do echo "iptables -D INPUT -s $i -p tcp --dport $Port -j DROP" >> /tmp/sanction.remove.$countryCode.rules;
                done
        fi

	echo "rm /tmp/sanction.remove.$countryCode.rules;" >> /tmp/sanction.remove.$countryCode.rules;

        echo
        echo "Applying IPtables rules..."
        echo
        chmod +x /tmp/sanction.$countryCode.rules;
        chmod +x /tmp/sanction.remove.$countryCode.rules;
        /tmp/sanction.$countryCode.rules;

        echo "Rules applied. To remove them, run the command (as root):"
        echo
        echo "/tmp/sanction.remove.$countryCode.rules"
        echo
        echo "or just restart iptables."


fi

rm /tmp/*.zone;
rm /tmp//sanction.$countryCode.rules;
